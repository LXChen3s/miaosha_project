
mybatis.mapper-locations=classpath:mapper/*.xml
# 数据源
spring.datasource.name=miaosha
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/miaosha?characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
spring.datasource.username=root
spring.datasource.password=3s3999
# 使用druid数据源
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# 初始化连接池个数
spring.datasource.initialSize=5
# 最大连接池个数
spring.datasource.maxActive=8
# 配置获取连接等待超时的时间，单位毫秒，缺省启用公平锁，并发效率会有所下降
spring.datasource.maxWait= 60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis= 60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis= 300000

# 用来检测连接是否有效的sql，要求是一个查询语句。
# 如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用
spring.datasource.validationQuery= SELECT 1 FROM DUAL
# 建议配置为true，不影响性能，并且保证安全性。
# 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.testWhileIdle= true
# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.datasource.testOnBorrow= false
# 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.datasource.testOnReturn= false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements= true
spring.datasource.maxPoolPreparedStatementPerConnectionSize= 20
# 通过别名的方式配置扩展插件，多个英文逗号分隔，常用的插件有：
# 监控统计用的filter:stat
# 日志用的filter:log4j
# 防御sql注入的filter:wall
spring.datasource.filters= stat,wall
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties= druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat= true






# 如找不到请求对应处理程序，是否抛出NoHandlerFoundException
spring.mvc.throw-exception-if-no-handler-found=true
# 不允许默认资源解析
spring.resources.add-mappings=false

# 配置redis
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.database=1
# spring.redis.password=

# 配置jedis连接池
spring.redis.jedis.pool.max-active=50
spring.redis.jedis.pool.min-idle=20

# RocketMQ 配置
mq.nameserver.addr=127.0.0.1:9876
mq.topicname=stock

# 记录sql
logging.level.com.miaosha.dao = debug

# 开启tomcat accesslog
#server.tomcat.accesslog.enabled=true
# tomcat accesslog文件地址
#server.tomcat.accesslog.directory=D:/java-fun/miaoshaproject/logs
# 访问日志格式
#server.tomcat.accesslog.pattern=%h %l %u %t "%r" %s %b %D
# Set request attributes for IP address, Hostname, protocol and port used for the request.
server.tomcat.accesslog.request-attributes-enabled=true
# 是否启用日志轮转
server.tomcat.accesslog.rotate=true
# 日志轮转文件名称
server.tomcat.accesslog.file-date-format=.yyyy-MM-dd
# 日志文件前缀
server.tomcat.accesslog.prefix=tomcat_access_log
# 日志文件后缀
server.tomcat.accesslog.suffix=.log

# redisbloom的host
#redisbloom.host=127.0.0.1
## redisbloom的port
#redisbloom.port=6379
